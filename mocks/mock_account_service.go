// Code generated by MockGen. DO NOT EDIT.
// Source: services/account_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	models "transactions-routine/models"

	gomock "github.com/golang/mock/gomock"
)

// MockAccountServiceI is a mock of AccountServiceI interface.
type MockAccountServiceI struct {
	ctrl     *gomock.Controller
	recorder *MockAccountServiceIMockRecorder
}

// MockAccountServiceIMockRecorder is the mock recorder for MockAccountServiceI.
type MockAccountServiceIMockRecorder struct {
	mock *MockAccountServiceI
}

// NewMockAccountServiceI creates a new mock instance.
func NewMockAccountServiceI(ctrl *gomock.Controller) *MockAccountServiceI {
	mock := &MockAccountServiceI{ctrl: ctrl}
	mock.recorder = &MockAccountServiceIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountServiceI) EXPECT() *MockAccountServiceIMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockAccountServiceI) CreateAccount(documentNumber string) (*models.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", documentNumber)
	ret0, _ := ret[0].(*models.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockAccountServiceIMockRecorder) CreateAccount(documentNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockAccountServiceI)(nil).CreateAccount), documentNumber)
}

// GetAccount mocks base method.
func (m *MockAccountServiceI) GetAccount(accountID int64) (*models.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccount", accountID)
	ret0, _ := ret[0].(*models.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccount indicates an expected call of GetAccount.
func (mr *MockAccountServiceIMockRecorder) GetAccount(accountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccount", reflect.TypeOf((*MockAccountServiceI)(nil).GetAccount), accountID)
}
